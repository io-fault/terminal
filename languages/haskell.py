"""
# Haskell programming language profile.
"""

profile = {
	"terminators": ["$", ",", "->", "<-", "::"],

	"operations": [
		":", ";",
		"!", "|", "&", "^", "#", "@", "=",
		"+", "-", "*", "/", "\\",
		"<", ">"
	],

	"enclosures": [
		["(", ")"],
		["[", "]"],
		["{", "}"]
	],

	"literals": [
		["\"", "\""]
	],

	"exclusions": [
		["--", ""],
		["{-", "-}"]
	],

	"keyword": [
		"as",
		"case",
		"class",
		"data",
		"family",
		"default",
		"deriving",
		"do",
		"forall",
		"foreign",
		"hiding",
		"if",
		"then",
		"else",
		"import",
		"infix",
		"infixl",
		"infixr",
		"instance",
		"let",
		"in",
		"mdo",
		"module",
		"newtype",
		"proc",
		"qualified",
		"rec",
		"type",
		"where",
		"of"
	],

	"coreword": [
		"Functor",
		"Bounded",
		"Enum",
		"Eq",
		"Fractional",
		"Real",
		"Foldable",
		"Num",
		"Applicative",
		"Monoid",
		"Read",
		"Show",
		"RealFloat",
		"RealFrac",
		"Traversable",

		"Bool",
		"Char",
		"Double",
		"Either",
		"Float",
		"Int",
		"Integer",
		"Maybe",
		"Ordering",
		"Word",

		"FilePath",
		"IOError",
		"Rational",
		"ReadS",
		"ShowS",
		"String",
		"IO",

		"all",
		"any",
		"and",

		"appendFile",
		"asTypeOf",
		"break",
		"concat",
		"concatMap",
		"const",
		"curry",
		"cycle",
		"drop",
		"dropWhile",
		"either",
		"error",
		"even",
		"filter",
		"flip",
		"fromIntegral",
		"fst",
		"gcd",
		"getChar",
		"getContents",
		"getLine",
		"head",
		"id",
		"init",
		"interact",
		"ioError",
		"iterate",
		"last",
		"lcm",
		"lex",
		"lines",
		"lookup",
		"map",
		"mapM_",
		"maybe",
		"not",
		"notElem",
		"odd",
		"or",
		"otherwise",
		"print",
		"putChar",
		"putStr",
		"putStrLn",
		"read",
		"readFile",
		"readIO",
		"readLn",
		"readParen",
		"reads",
		"realToFrac",
		"repeat",
		"replicate",
		"reverse",
		"scanl",
		"scanl1",
		"scanr",
		"scanr1",
		"seq",
		"sequence_",
		"showChar",
		"showParen",
		"showString",
		"shows",
		"snd",
		"span",
		"splitAt",
		"subtract",
		"tail",
		"take",
		"takeWhile",
		"uncurry",
		"undefined",
		"unlines",
		"until",
		"unwords",
		"unzip",
		"unzip3",
		"userError",
		"words",
		"writeFile",
		"zip",
		"zip3",
		"zipWith",
		"zipWith3"
	]
}
