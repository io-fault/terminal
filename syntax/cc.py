"""
# C++ programming language profile.
"""

profile = {
	"terminators": [";", ",", "?", ":"],
	"routers": [".", "->", "::"],

	"operations": [
		"=",
		"+", "-", "*", "/", "%",
		"~", "|", "&", "^", "<<", ">>",

		"!", "&&", "||",
		"==", "<=", ">=", "!=",
		"<", ">",

		"|=", "&=", "^=", "<<=", ">>=",
		"+=", "-=", "*=", "/=",
		"++", "--",

		"\\\\", "\\\""
	],

	"enclosures": [
		["(", ")"],
		["[", "]"],
		["{", "}"]
	],

	"literals": [
		["\"", "\""],
		["'", "'"]
	],

	"exclusions": [
		["//", ""],
		["/*", "*/"]
	],

	"keyword": [
		"alignas",
		"alignof",
		"and",
		"and_eq",
		"asm",
		"auto",
		"audit",
		"axiom",
		"bitand",
		"bitor",
		"bool",
		"break",
		"case",
		"catch",
		"char",
		"char16_t",
		"char32_t",
		"class",
		"compl",
		"concept",
		"const",
		"constexpr",
		"const_cast",
		"continue",
		"decltype",
		"default",
		"delete",
		"do",
		"double",
		"dynamic_cast",
		"else",
		"enum",
		"explicit",
		"export",
		"extern",
		"false",
		"float",
		"for",
		"friend",
		"final",
		"goto",
		"if",
		"import",
		"inline",
		"int",
		"long",
		"mutable",
		"module",
		"namespace",
		"new",
		"noexcept",
		"not",
		"not_eq",
		"nullptr",
		"operator",
		"or",
		"or_eq",
		"override",
		"private",
		"protected",
		"public",
		"register",
		"reinterpret_cast",
		"requires",
		"return",
		"short",
		"signed",
		"sizeof",
		"static",
		"static_assert",
		"static_cast",
		"struct",
		"switch",
		"template",
		"this",
		"thread_local",
		"throw",
		"true",
		"try",
		"typedef",
		"typeid",
		"typename",
		"union",
		"unsigned",
		"using",
		"virtual",
		"void",
		"volatile",
		"wchar_t",
		"while",
		"xor",
		"xor_eq"
	],

	"coreword": [
		"std",
		"unique_ptr",
		"shared_ptr",
		"weak_ptr",
		"auto_ptr",
		"align",
		"addressof"
	],

	"metaword": [
		"NULL",
		"__func__",
		"__FILE__",
		"__LINE__",
		"__DATE__",
		"__TIME__",
		"_Pragma",
		"#include",
		"#define",
		"#undef",
		"#if",
		"#ifdef",
		"#ifndef",
		"#elif",
		"#else",
		"#endif",
		"#warning",
		"#error",
		"#line",
		"#pragma",
		"#import",
		"__has_include",
		"__has_cpp_attribute"
	]
}
